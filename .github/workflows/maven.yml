# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MY AUTOTESTS


permissions: 
    id-token: write # Grant id-token: write permission
    pages: write
    contents: write
on:
  push:
    branches: [ "master", "new_branch" ]
  pull_request:
    branches: [ "master", "new_branch" ]

jobs:
  build:
    environment: 
          name: github-actions
          url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Install Allure  
      run: |  
        curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.zip  
        sudo apt-get install -y unzip  
        unzip allure.zip -d /opt/allure  
        sudo ln -s /opt/allure/allure-2.25.0/bin/allure /usr/bin/allure 
        
    - name: Generate Allure Report  
      run: |  
        mkdir -p allure-report  
        allure generate --clean allure-results -o allure-report

    - name: Upload Allure Report as artifact  
      uses: actions/upload-pages-artifact@v3  
      with:  
        path: './allure-report'  

    - name: Deploy to GitHub Pages  
      id: deployment  
      uses: actions/deploy-pages@v4
      
    - name: Run tests
      run: mvn clean test
